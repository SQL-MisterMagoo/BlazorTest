@using Microsoft.AspNetCore.Identity
@using BlazorTest.Server.Areas.Identity.Data
@using Microsoft.AspNetCore.Blazor.Services
@using System.Security.Claims
@using Microsoft.Extensions.Options
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor
@inject SignInManager<BlazorTestServerUser> SignInManager
@inject UserManager<BlazorTestServerUser> UserManager

@if (User != null && SignInManager.IsSignedIn(User))
{
    <a class="ml-md-auto btn btn-primary" asp-area="Identity" asp-page="/Account/Manage/Index" href="/Identity/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    <button class="btn ml-md-auto" onclick="@Logout">Logout</button>
}
else
{
    <a class="ml-md-auto btn btn-primary" asp-area="Identity" asp-page="/Account/Register" href="/Identity/Account/Register">Register</a>
    <a class="ml-md-auto btn btn-primary" asp-area="Identity" href="/Identity/Account/Login?returnUrl=~/blz">Login</a>
}

@functions
{
  [Inject] IUriHelper uriHelper { get; set; }

  ClaimsPrincipal User;

  protected override void OnInit()
  {
      base.OnInit();

      try
      {
          User = httpContextAccessor.HttpContext.User;
      }
      catch (Exception)
      {
      }
  }
  void Logout()
  {
      uriHelper.NavigateTo("/Identity/Account/Logout?returnUrl=/blz");
  }
}